input {
  tcp {
    format => "json"
    mode => "server"
    host => "0.0.0.0"
    port => 8514
    ssl_enable => true
    ssl_cert => "/var/lib/logstash/server.pem"
    ssl_key => "/var/lib/logstash/server.key"
    ssl_verify => false
    type => "nxlog"
  }
  <% @inputs.each do |input_map| %>
    <% input_map.each do |input_type, input_body| %>
      <%= input_type %> {
        <% input_body.each do |key, value| %>
          <%= key %> => <%= value.inspect %>
        <% end %>
      }
    <% end %>
  <% end %>
}
filter {
  date {
      match => [ "EventReceivedTime", "YYYY-MM-dd HH:mm:ss" ]
      remove_field => [ "EventReceivedTime" ]
  }

  date {
      match => [ "EventReceivedTimeMs", "YYYY-MM-dd HH:mm:ss", "YYYY-MM-dd HH:mm:ss.S", "YYYY-MM-dd HH:mm:ss.SS", "YYYY-MM-dd HH:mm:ss.SSS", "YYYY-MM-dd HH:mm:ss.SSSS", "YYYY-MM-dd HH:mm:ss.SSSSS", "YYYY-MM-dd HH:mm:ss.SSSSSS" ]
      remove_field => [ "EventReceivedTimeMs" ]
  }

  grok {
      type => "nxlog"

      # v1   cobalt-52aab45be4b0ef4e9b9e0a9b.applications.52d4de58e4b08ec56d58a714.workflow/jobid.stepid.stepname/filename.txt
      # v2   52d4de58e4b08ec56d58a714/jobid.stepid.stepname/filename.txt
      # init 52d4de58e4b08ec56d58a714/chef-init/filename.txt
      match => [ "FileName", "(cobalt-%{BASE16NUM:appId}\.applications\.%{BASE16NUM:instId}\.?%{DATA:componentId}|%{BASE16NUM:instId})/(%{DATA:jobId}\.%{DATA:stepId}\.%{DATA:stepname}|%{DATA:chefInit})/%{GREEDYDATA:filename}" ]
  }

  grok {
      type => "nxlog"
      match => [ "instId", "cobalt-%{BASE16NUM:appId}\.applications\.%{BASE16NUM:realInstId}\.?%{DATA:componentId}" ]
      add_tag => [ "parsedinstid" ]
  }

  mutate {
      tags => ["parsedinstid"]
      replace => [ "instId", "%{realInstId}" ]
      remove_tag => ["parsedinstid"]
      remove_field => ["realInstId"]
  }

  grok {
    type => "nxlog"
    match => [ "chefInit", ".+" ]
    add_field => [ "jobId", "~%{chefInit}~"]
    add_field => [ "stepId", "~%{chefInit}~" ]
    add_field => [ "stepname", "~%{chefInit}~" ]
  }

  mutate {
    type => "nxlog"
    add_tag => "unprocessed"
  }

  grok { # chef logs
      type => "nxlog" # TIMESTAMP_ISO8601
                      # [2013-12-11T18:21:19+00:00] INFO: Setting the run_list to ["recipe[chef-solo-extension]", "recipe[nxlog]"] from JSON
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      match => [ "Message", "\[[^\]]+\] %{LOGLEVEL:Severity}: %{GREEDYDATA:MessageTxt}" ]
  }
  grok { # chef client warnings
      type => "nxlog"
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      match => [ "Message", "[/\w_%!$@:.,-]+:%{NUMBER}: %{DATA:Severity}: %{GREEDYDATA:MessageTxt}" ]
  }

  # haproxy
  grok {
      type => "nxlog"
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      match => [ "Message", "%{HAPROXYHTTP}" ]
      add_field => [ "Severity", "INFO" ]
      add_field => [ "MessageTxt", "%{Message}" ]
      add_field => [ "filename", "%{FileName}" ]
      remove_field => [ "Stream" ]
  }

  # tomcat 1
  grok {
      type => "nxlog"
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      match => [ "Message", "%{LOGLEVEL:Severity}: %{GREEDYDATA:MessageTxt}" ]
      add_field => [ "filename", "%{FileName}" ]
      remove_field => [ "Stream" ]
  }

  # tomcat 2
  grok {
      type => "nxlog"
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      add_tag => [ "customdatetime" ]
      match => [ "Message", "(?<EventReceivedTime>%{MONTH} %{MONTHDAY}, %{YEAR} %{TIME} (AM|PM)) %{GREEDYDATA:MessageTxt}" ]
      add_field => [ "filename", "%{FileName}" ]
      add_field => [ "Severity", "INFO" ]
  }

  # mysqld.log
  grok {
      type => "nxlog"
      tags => [ "unprocessed" ]
      remove_tag => [ "unprocessed" ]
      add_tag => [ "customdatetime" ]
      match => [ "Message", "(?<EventReceivedTime>\d{2}%{MONTHNUM}%{MONTHDAY} %{TIME}) %{GREEDYDATA:MessageTxt}" ]
      add_field => [ "filename", "%{FileName}" ]
      add_field => [ "Severity", "INFO" ]
  }

  date {
    type => "nxlog"
    tags => [ "customdatetime" ]
    remove_tag => [ "customdatetime" ]
    match => [ "EventReceivedTime", "MMM dd, YYYY hh:mm:ss aa", "yyMMdd HH:mm:ss" ]
    locale => "US"
    timezone => "UTC"
  }

  grok { # other messages from stderr
    type => "nxlog"
    tags => [ "unprocessed" ]
    remove_tag => [ "unprocessed" ]
    match => [ "Stream", "stderr" ]
    add_field => [ "Severity", "INFO" ]
    add_field => [ "MessageTxt", "%{Message}" ]
  }

  grok { # other messages stdout
    type => "nxlog"
    tags => [ "unprocessed" ]
    remove_tag => [ "unprocessed" ]
    match => [ "Stream", "stdout" ]
    add_field => [ "Severity", "INFO" ]
    add_field => [ "MessageTxt", "%{Message}" ]
  }

  mutate { # messages from custom locations
    type => "nxlog"
    tags => [ "unprocessed" ]
    remove_tag => [ "unprocessed" ]
    add_field => [ "Severity", "INFO" ] # TODO: parse most common formats
    add_field => [ "filename", "%{FileName}" ]
    add_field => [ "MessageTxt", "%{Message}" ]
  }

  grok {
    type => "nxlog"
    match => [ "host", "%{IPORHOST:parsed_host}(:${POSINT})?" ]
  }

  mutate {
      type => "nxlog"
      replace => [ "@severity", "%{Severity}" ]
      replace => [ "@message", "%{MessageTxt}" ]
      replace => [ "@raw", "%{Message}" ]
      replace => [ "host", "%{parsed_host}" ]
  }

  mutate {
      type => "nxlog"
      remove => [ "Message", "MessageTxt", "Severity", "SourceModuleType", "SourceModuleName", "EventReceivedTime", "EventReceivedTimeMs", "FileName", "@source_path", "@source", "parsed_host" ]
      remove_tag => ["_grokparsefailure"]
  }

}
output {
  stdout { debug => true }
  elasticsearch {
      index => "logstash-%{+YYYY.MM.dd}"
      embedded => true
  }
}
