version: "1.1"
header:
  services:
    logger:
      logger-server:   consume-signal(string)


launch:
    parameters:
        logger-num: # for test purposes
            description: Number of loggers
            type: int
            default: 2

    steps:

        - provision-vm:
            action: provisionVmsWithLogging
            phase: provision-vm
            parameters:
                quantity: "{$.logger-num}"
                hardwareId: "m1.small"
                roleName: logger
                vmIdentity: ec2-user
                imageId: us-east-1/ami-eb6b0182
            output:
                loggerips: ips
                logging-dashboard: logging-dashboard

        - do-something:
            action: do-something
            precedingPhases: [ provision-vm ]
            parameters: {}

    return:
        vms:
            description: VMs
            value: "{$.loggerips}"
        # ADD TO YOUR MANIFEST this return value should present to get rendered widget with link
        logging-dashboard:
            description: Logging Dashboard for instance
            value: "{$.logging-dashboard}"

do-something:
    parameters:
        command:
          type: string
          default: 'echo "Hello from execrun!"'
          description: "Command to execute"
    steps:
        - run-command:
            action: execrun
            phase: "run-command"
            precedingPhases: [  ]
            parameters:
                roles: [ logger ]
                command:
                    - "{$.command}"
            output:
                stdout: stdout
                stderr: stderr
    return:
        stdout:
            value: "{$.stdout}"
        stderr:
            value: "{$.stderr}"


do-empty-chef-run:
    parameters:
        logger-cookbooks-version:
          type: string
          default: "stable"

    steps:
        - dummy-chefrun:
            action: chefsolo
            phase: "dummy-chefrun"
            precedingPhases: [ ]
            parameters:
                roles: [ logger ]
                recipeUrl: "http://qubell-logging.s3.amazonaws.com/{$.logger-cookbooks-version}/nxlog.tar.gz"
                runList: [ ]
                jattrs: {}
            output:
                chefState: chefState
    return:
        chefState:
            value: "{$.chefState}"

change-logger:
    steps:
        - update:
            action: changeLoggerServer
            parameters:
                roles: [ logger ]
            output:
                logging-dashboard: logging-dashboard
    return:
        logging-dashboard:
            value: '{$.logging-dashboard}'

stop-logging:
    steps:
        - do:
            action: enableLogging
            parameters:
                roles: [ logger ]

start-logging:
    steps:
        -do:
            action: disableLogging
            parameters:
                roles: [ logger ]

destroy:
    steps:
    - destroy-vm:
        action: undeployEnv
        parameters:
            phase: destroy
